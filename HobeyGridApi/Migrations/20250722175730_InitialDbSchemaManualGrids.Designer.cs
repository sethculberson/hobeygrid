// <auto-generated />
using System;
using HobeyGridApi.Data;
using HobeyGridApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HobeyGridApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250722175730_InitialDbSchemaManualGrids")]
    partial class InitialDbSchemaManualGrids
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HobeyGridApi.Models.Award", b =>
                {
                    b.Property<int>("AwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("award_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AwardId"));

                    b.Property<string>("AwardName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("award_name");

                    b.HasKey("AwardId");

                    b.HasIndex("AwardName")
                        .IsUnique();

                    b.ToTable("awards", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.CollegeTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abbreviation");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("team_name");

                    b.HasKey("TeamId");

                    b.HasIndex("TeamName")
                        .IsUnique();

                    b.ToTable("college_teams", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.GridInstance", b =>
                {
                    b.Property<Guid>("GridId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("grid_id");

                    b.Property<GridCategory>("ColCategory1")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<GridCategory>("ColCategory2")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<GridCategory>("ColCategory3")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("CorrectAnswersJson")
                        .HasColumnType("jsonb")
                        .HasColumnName("correct_answers_json");

                    b.Property<DateOnly>("GridDate")
                        .HasColumnType("date")
                        .HasColumnName("grid_date");

                    b.Property<GridCategory>("RowCategory1")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<GridCategory>("RowCategory2")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<GridCategory>("RowCategory3")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("GridId");

                    b.HasIndex("GridDate")
                        .IsUnique();

                    b.ToTable("grids", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pos");

                    b.HasKey("PlayerId");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.PlayerAward", b =>
                {
                    b.Property<Guid>("PlayerAwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("player_award_id");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer")
                        .HasColumnName("award_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<short?>("SeasonYear")
                        .HasColumnType("smallint")
                        .HasColumnName("season_year");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.HasKey("PlayerAwardId");

                    b.HasIndex("AwardId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("player_awards", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.PlayerCollegeSeason", b =>
                {
                    b.Property<Guid>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("stat_id");

                    b.Property<short>("A")
                        .HasColumnType("smallint")
                        .HasColumnName("a");

                    b.Property<short>("G")
                        .HasColumnType("smallint")
                        .HasColumnName("g");

                    b.Property<short>("Gp")
                        .HasColumnType("smallint")
                        .HasColumnName("gp");

                    b.Property<bool>("IsCaptain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_captain");

                    b.Property<short>("Pim")
                        .HasColumnType("smallint")
                        .HasColumnName("pim");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<short>("Pm")
                        .HasColumnType("smallint")
                        .HasColumnName("pm");

                    b.Property<decimal>("Ppg")
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("ppg");

                    b.Property<short>("SeasonYear")
                        .HasColumnType("smallint")
                        .HasColumnName("season_year");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.Property<short>("Tp")
                        .HasColumnType("smallint")
                        .HasColumnName("tp");

                    b.HasKey("StatId");

                    b.HasIndex("TeamId");

                    b.HasIndex("PlayerId", "TeamId", "SeasonYear")
                        .IsUnique();

                    b.ToTable("player_season_stats", (string)null);
                });

            modelBuilder.Entity("HobeyGridApi.Models.PlayerAward", b =>
                {
                    b.HasOne("HobeyGridApi.Models.Award", "Award")
                        .WithMany("PlayerAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HobeyGridApi.Models.Player", "Player")
                        .WithMany("PlayerAwards")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HobeyGridApi.Models.CollegeTeam", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.Navigation("Award");

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("HobeyGridApi.Models.PlayerCollegeSeason", b =>
                {
                    b.HasOne("HobeyGridApi.Models.Player", "Player")
                        .WithMany("PlayerCollegeSeasons")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HobeyGridApi.Models.CollegeTeam", "Team")
                        .WithMany("PlayerCollegeSeasons")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("HobeyGridApi.Models.Award", b =>
                {
                    b.Navigation("PlayerAwards");
                });

            modelBuilder.Entity("HobeyGridApi.Models.CollegeTeam", b =>
                {
                    b.Navigation("PlayerCollegeSeasons");
                });

            modelBuilder.Entity("HobeyGridApi.Models.Player", b =>
                {
                    b.Navigation("PlayerAwards");

                    b.Navigation("PlayerCollegeSeasons");
                });
#pragma warning restore 612, 618
        }
    }
}
